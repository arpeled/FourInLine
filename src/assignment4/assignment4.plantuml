@startuml

title __ASSIGNMENT4's Class Diagram__\n

  namespace assignment4 {
    class assignment4.Board {
        {static} + EMPTY : char
        {static} - COLUMNS : int
        {static} - ROWS : int
        {static} + boardIsFull()
        {static} + firstEmptyRow()
        {static} + getCOLUMNS()
        {static} + getROWS()
        {static} + initializeBoard()
        {static} + isColumnFull()
        {static} + setCOLUMNS()
        {static} + setROWS()
    }
  }
  

  namespace assignment4 {
    class assignment4.ConsoleUI {
        + printBoard()
        + printMenu()
    }
  }
  

  namespace assignment4 {
    class assignment4.DebugProxy {
        - obj : Object
        {static} - writer : PrintWriter
        {static} + close_inner_file()
        + invoke()
        {static} + newInstance()
        - DebugProxy()
    }
  }
  

  namespace assignment4 {
    class assignment4.EasyVirtualPlayer {
        + computerChoice()
    }
  }
  

  namespace assignment4 {
    class assignment4.Game {
        {static} + EMPTY : char
        {static} + OPLAYER : char
        {static} + WIN : int
        {static} + XPLAYER : char
        {static} + board : char[][]
        {static} + computerplays : boolean
        {static} + currentPlayer : char
        {static} + gameover : boolean
        {static} + changePlayer()
        {static} + play()
        {static} + playerNum()
        {static} + showWinner()
        {static} + winningDisk()
    }
  }
  

  namespace assignment4 {
    enum GameModes {
      EASY
      HARD
      MEDIUM
    }
  }
  

  namespace assignment4 {
    class assignment4.Main {
        {static} + main()
    }
  }
  

  namespace assignment4 {
    class assignment4.MediumVirtualPlayer {
        + computerChoice()
    }
  }
  

  namespace assignment4 {
    enum MenuOptions {
      Exit
      MultiPlayer
      SinglePlayer
    }
  }
  

  namespace assignment4 {
    interface assignment4.UserInterface {
        {abstract} + printBoard()
        {abstract} + printMenu()
    }
  }
  

  namespace assignment4 {
    interface assignment4.VirtualPlayer {
        {abstract} + computerChoice()
    }
  }
  

  namespace assignment4 {
    class assignment4.VirtualPlayerFactory {
        + getVirtialPlayer()
    }
  }
  

  assignment4.ConsoleUI .up.|> assignment4.UserInterface
  assignment4.DebugProxy .up.|> java.lang.reflect.InvocationHandler
  assignment4.EasyVirtualPlayer .up.|> assignment4.VirtualPlayer
  assignment4.MediumVirtualPlayer .up.|> assignment4.VirtualPlayer


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
